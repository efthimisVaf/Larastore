name: Laravel

on:
  push:
    branches: [master, docker-deploy]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: shivammathur/setup-php@b7d1d9c9a92d8d8463ce36d7f60da34d461724f8
        with:
          php-version: "8.0"
      - uses: actions/checkout@v2
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/phpunit

  deploy:
    runs-on: ubuntu-latest
    needs: [laravel-tests]

    steps:
      - uses: actions/checkout@v2
      - name: Install ansible
        run: |
          sudo apt update -qq && sudo apt install ansible -yqq

      - name: Githutb Container Registry Login
        run: |
          echo $CR_PAT | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        shell: bash
        env:
          CR_PAT: ${{secrets.CR_PAT}}

      - name: Build & Push the Image
        run: |
          export REPO=$(echo ${{ github.actor }} | tr '[:upper:]' '[:lower:]')
          docker build -t ghcr.io/$REPO/larastore -f ./Docker/Dockerfile .
          docker push ghcr.io/$REPO/larastore
        shell: bash

      - name: Create inventory file
        run: |
          echo "$SERVER_FQDN ansible_connection=ssh ansible_user=$REMOTE_USER" > inventory
        shell: bash
        env:
          SERVER_FQDN: ${{secrets.SERVER_FQDN}}
          REMOTE_USER: ${{secrets.REMOTE_USER}}
      
      - name: Create ssh_key file
        run: |
          echo "$SSH_PRIVATE_KEY" > key.pem
          chmod 700 key.pem
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}

      - name: Create vault_password file
        run: 'echo "$VAULT_PASSWORD" > vault_pass'
        shell: bash
        env:
          VAULT_PASSWORD: ${{secrets.VAULT_PASSWORD}}

      - name: Add variables to vault file
        run: |
          echo "DB_NAME: $DB_NAME" > vault.yml
          echo "DB_USERNAME: $DB_USERNAME" >> vault.yml
          echo "DB_PASSWORD: $DB_PASSWORD" >> vault.yml
          echo "GHCR_USERNAME: $GHCR_USERNAME" >> vault.yml
          echo "GHCR_PASSWORD: $GHCR_PAT" >> vault.yml
          ansible-vault encrypt --vault-password-file vault_pass vault.yml
        shell: bash
        env:
          DB_NAME: ${{secrets.DB_NAME}}
          DB_USERNAME: ${{secrets.DB_USERNAME}}
          DB_PASSWORD: ${{secrets.DB_PASSWORD}}
          GHCR_USERNAME: ${{ github.actor }}
          GHCR_PAT: ${{secrets.CR_PAT}}

      - name: Set up for SSH
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H $SERVER_FQDN >>  ~/.ssh/known_hosts
        shell: bash
        env:
          SERVER_FQDN: ${{secrets.SERVER_FQDN}}
      
      - name: Run playbook
        run: |
          ansible-playbook -i inventory --key-file key.pem --vault-password-file vault_pass ansible/deploy.yml
        shell: bash
